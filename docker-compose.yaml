version: 3;

services:
  postgres_db:
    image: postgres:16
    container_name: postgres_db
    restart: on-failure
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_db:/var/lib/postgresql
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}", "-h", "${POSTGRES_HOST}", "-p", "5432" ]
      timeout: 30s
      retries: 3
    networks:
      - local

  paid_content:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: paid_content
    restart: on-failure
    env_file:
      - .env
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 config.wsgi"
    volumes:
      - .:/paid_content/
      - static_volume:/paid_content_platform/static/
      - media_volume:/paid_content_platform/media/
    ports:
      - '8000:8000'
    depends_on:
      postgres_db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:8000" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - local

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: on-failure
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/var/html/static/
      - media_volume:/var/html/media/
    ports:
      - '80:80'
    depends_on:
      paid_content:
        condition: service_healthy
    networks:
      - local

networks:
  local:
    driver: bridge

volumes:
  postgres_db:
  media_volume:
  static_volume:
